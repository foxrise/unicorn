@import url('https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');
$z-index-starter: 1000;

$primary-font: Poppins, sans-serif;

$xs: 0px;
$sm: 576px;
$md: 768px;
$lg: 992px;
$xl: 1200px;
$xxl: 1400px;

$breakpoints: (
  "xs": 0px,
  "sm": 576px,
  "md": 768px,
  "lg": 992px,
  "xl": 1200px,
  "xxl": 1400px,
);
$colorLists: (
  "inherit": inherit,
  "white":    #fff,
  "gray-100": #f8f9fa,
  "gray-200": #e9ecef,
  "gray-300": #dee2e6,
  "gray-400": #ced4da,
  "gray-500": #adb5bd,
  "gray-600": #6c757d,
  "gray-700": #495057,
  "gray-800": #343a40,
  "gray-900": #212529,
  "black":    #000,
  "blue":   #0d6efd,
  "indigo":  #6610f2,
  "purple":  #6f42c1,
  "pink":    #d63384,
  "red":     #dc3545,
  "orange":  #fd7e14,
  "yellow":  #ffc107,
  "green" :  #198754,
  "teal"  :  #20c997,
  "cyan"  :  #0dcaf0,
  "blue-100": #cfe2ff,
  "blue-200": #9ec5fe,
  "blue-300": #6fa6fe,
  "blue-400": #3d8bfd,
  "blue-500": #0d6efd,
  "blue-600": #0a58ca,
  "blue-700": #074298,
  "blue-800": #052c65,
  "blue-900": #031632,
  "indigo-100": #e0d1fd,
  "indigo-200": #c29ffa,
  "indigo-300": #a270f6,
  "indigo-400": #8540f5,
  "indigo-500": #6610f2,
  "indigo-600": #520dc2,
  "indigo-700": #3d0b91,
  "indigo-800": #290661,
  "indigo-900": #140330,
  "purple-100": #e1d9f3,
  "purple-200": #c4b3e6,
  "purple-300": #a88eda,
  "purple-400": #8b68cd,
  "purple-500": #6f42c1,
  "purple-600": #59359b,
  "purple-700": #432874,
  "purple-800": #2a1b4d,
  "purple-900": #160d25,
  "pink-100": #f8d6e5,
  "pink-200": #efadcd,
  "pink-300": #e684b5,
  "pink-400": #de5c9d,
  "pink-500": #d63384,
  "pink-600": #a92a6b,
  "pink-700": #801f4f,
  "pink-800": #571435,
  "pink-900": #2b091b,
  "red-100": #f9d7da,
  "red-200": #f1aeb5,
  "red-300": #e9878f,
  "red-400": #e35e6a,
  "red-500": #dc3545,
  "red-600": #b02a37,
  "red-700": #832129,
  "red-800": #57141c,
  "red-900": #2c0b0e,
  "orange-100": #ffe5d1,
  "orange-200": #fecba1,
  "orange-300": #feb272,
  "orange-400": #fd9844,
  "orange-500": #fd7e14,
  "orange-600": #ca640f,
  "orange-700": #984c0b,
  "orange-800": #653206,
  "orange-900": #321a04,
  "yellow-100": #fef3cd,
  "yellow-200": #ffe69d,
  "yellow-300": #ffda6a,
  "yellow-400": #ffcd39,
  "yellow-500": #ffc107,
  "yellow-600": #ca9a07,
  "yellow-700": #997405,
  "yellow-800": #654d03,
  "yellow-900": #342800,
  "green-100": #d1e7de,
  "green-200": #a3cfbb,
  "green-300": #75b798,
  "green-400": #499f76,
  "green-500": #198754,
  "green-600": #136c42,
  "green-700": #0e5132,
  "green-800": #0a3622,
  "green-900": #051c11,
  "teal-100": #d2f4e9,
  "teal-200": #a7e9d5,
  "teal-300": #79dfc0,
  "teal-400": #4dd4ad,
  "teal-500": #20c997,
  "teal-600": #19a179,
  "teal-700": #15785b,
  "teal-800": #0d503c,
  "teal-900": #06281f,
  "cyan-100": #cef5fc,
  "cyan-200": #9eeaf9,
  "cyan-300": #6edff7,
  "cyan-400": #3bd6f2,
  "cyan-500": #0dcaf0,
  "cyan-600": #0ca2c0,
  "cyan-700": #077990,
  "cyan-800": #065160,
  "cyan-900": #032830,
  "transparent": transparent,
  "none": transparent
);
$fontWeightLists: (
  "superlight": 100,
  "thin":       200,
  "light":      300,
  "normal":     400,
  "medium":     500,
  "semibold":   600,
  "bold":       700,
  "bolder":     800,
  "black":      900,
);
$positionLists: (
  "absolute": absolute,
  "fixed": fixed,
  "relative": relative,
  "sticky": sticky,
  "static": static,
);
$alignLists: (
  "left": left,
  "right": right,
  "center": center
);
$verticalAlignLists: (
  "baseline": baseline,
  "top": top,
  "middle": middle,
  "bottom":bottom,
  "text-top":text-top,
  "text-bottom": text-bottom,
  "sub": sub,
  "super": super,
);
$borderWidthLists: (
  1: 1px,
  2: 2px,
  3: 3px,
  4: 4px,
  5: 5px
);

$sizeLists: (
  1: 40px,
  2: 32px,
  3: 28px,
  4: 24px,
  5: 20px,
  6: 16px,
  "title": 25px,
  "sub-title": 20px,
  "normal-text": 18px,
  "text": 18px,
  "normal": 18px,
);

$rangeLists: (
  0:0,
  5:5,
  10:10,
  15:15,
  20:20,
  25:25,
  30:30,
  35:35,
  40:40,
  45:45,
  50:50,
  55:55,
  60:60,
  65:65,
  70:70,
  75:75,
  80:80,
  85:85,
  90:90,
  95:95,
  100:100,
);
$scaleTransformLists: (
  0: scale(0),
  50: scale(.5),
  75: scale(.75),
  90: scale(.9),
  95: scale(.95),
  100:scale(1),
  105:scale(1.05),
  110:scale(1.1),
  125:scale(1.25),
  150:scale(1.5),
);
$rotateTransformLists: (
  0: rotate(0deg),
  1: rotate(1deg),
  2: rotate(2deg),
  3: rotate(3deg),
  6: rotate(6deg),
  12: rotate(12deg),
  24: rotate(24deg),
  45: rotate(45deg),
  90: rotate(90deg),
  120: rotate(120deg),
  180: rotate(180deg),
  360: rotate(360deg),
);

$columnRowLists: (
  1:1,
  2:2,
  3:3,
  4:4,
  5:5,
  6:6,
  7:7,
  8:8,
  9:9,
  10:10,
  11:11,
  12:12,
  13:13,
);
$rangeListsTwo: (
  "fit": fit-content,
  "min": min-content,
  "max": max-content,
  "2xs":16rem,
  "3xs":18rem,
  "xs":20rem,
  "sm":24rem,
  "md":28rem,
  "lg":32rem,
  "xl":36rem,
  "2xl":42rem,
  "3xl":48rem,
  "4xl":56rem,
  "5xl":64rem,
  "6xl":72rem,  
  "7xl":80rem,
  0:0%,
  5:5%,
  10:10%,
  15:15%,
  20:20%,
  25:25%,
  30:30%,
  35:35%,
  40:40%,
  45:45%,
  50:50%,
  55:55%,
  60:60%,
  65:65%,
  70:70%,
  75:75%,
  80:80%,
  85:85%,
  90:90%,
  95:95%,
  100:100%,
  "auto": auto
);
$timeScaleLists: (
  "1":.1s,
  "2":.2s,
  "3":.3s,
  "4":.4s,
  "5":.5s,
  "6":.6s,
  "7":.7s,
  "8":.8s,
  "9":.9s,
  "10":1s,
  "15":1.5s,
  "20":2s,
  "25":2.5s,
  "30":3s,
  "35":3.5s,
  "40":4s,
  "45":4.5s,
  "50":5s,
);
$columnScaleLists: (
  "1":1,
  "2":2,
  "3":3,
  "4":4,
  "5":5,
  "6":6,
  "7":7,
  "8":8,
  "9":9,
  "10":10,
  "11":11,
  "12":12,
  "auto": auto,
  "2xs":16rem,
  "3xs":18rem,
  "xs":20rem,
  "sm":24rem,
  "md":28rem,
  "lg":32rem,
  "xl":36rem,
  "2xl":42rem,
  "3xl":48rem,
  "4xl":56rem,
  "5xl":64rem,
  "6xl":72rem,  
  "7xl":80rem,
);
$containerScaleLists: (
  "sm":640px,
  "md":768px,
  "lg":1024px,
  "xl":1280px,
  "2xl":1536px,
);
$lineHeightLists: (
  "0px":0px,
  "0":0rem,
  "1":.75rem,  
  "2":1rem,
  "3":1.25rem,
  "4":1.5rem,
  "5":1.75rem,
  "6":2rem,
  "7":2.25rem,
  "8":2.5rem,
  "9":2.75rem,
  "10":3rem,
  "11":3.25rem,
  "12":3.5rem,
  "13":3.75rem,
  "14":4rem,
  "none": 1,
);
$remLists: (
  "0": 0rem,
  "0px": 0px,
  "1px":1px,
  "2px":2px,
  "3px":3px,
  "4px":4px,
  "5px":5px,
  "10px":10px,
  "15px":15px,
  "20px":20px,
  "25px":25px,
  "30px":30px,
  "35px":35px,
  "40px":40px,
  "45px":45px,
  "50px":50px,
  "0.5": 0.125rem,
  "1":0.25rem,
  "1.5":0.375rem,
  "2":0.5rem,
  "2.5":0.625rem,
  "3":0.75rem,
  "3.5":0.875rem,
  "4":1rem,
  "5":1.25rem,
  "6":1.5rem,
  "7":1.75rem,
  "8":2rem,
  "9":2.25rem,
  "10":2.5rem,
  "11":2.75rem,
  "12":3rem,
  "14":3.5rem,
  "16":4rem,
  "20":5rem,
  "24":6rem,
  "28":7rem,
  "32":8rem,
  "36":9rem,
  "40":10rem,
  "44":11rem,
  "48":12rem,
  "52":13rem,  
  "56":14rem,  
  "60":15rem,
  "64":16rem,   
  "68":17rem,
  "72":18rem,
  "80": 20rem,
  "96":24rem,
  "auto":auto,
);
$textDecorationLists: (
  "underline": underline,
  "overline": overline,
  "cross": line-through,
  "line-through": line-through,
  "none": none
);
$textTransformLists: (
  "uppercase":uppercase,
  "lowercase":lowercase,
  "capitalize":capitalize,
  "capitalise":capitalize,
  "none": none,
);
$backdropBlurLists: (
  "none": blur(0px),
  "1":blur(4px),
  "2":blur(8px),
  "3":blur(12px),
  "4":blur(16px),
  "5":blur(24px),
  "6":blur(40px),
  "7":blur(64px),
  "8":blur(78px),
  "9":blur(108px),
  "10":blur(200px),
);
$backdropBrightnessLists: (
  "none": brightness(0),
  "1":brightness(.2),
  "2":brightness(.25),
  "3":brightness(.5),
  "4":brightness(.75),
  "5":brightness(.8),
  "6":brightness(.9),
  "7":brightness(1),
  "8":brightness(1.5),
  "9":brightness(1.75),
  "10":brightness(2),
);
$dropShadowLists: (
  "xs":drop-shadow(0 1px 1px rgb(0 0 0 / 0.05)),
  "sm":drop-shadow(0 1px 2px rgb(0 0 0 / 0.1)) drop-shadow(0 1px 1px rgb(0 0 0 / 0.06)),
  "md":drop-shadow(0 4px 3px rgb(0 0 0 / 0.07)) drop-shadow(0 2px 2px rgb(0 0 0 / 0.06)),
  "lg":drop-shadow(0 10px 8px rgb(0 0 0 / 0.04)) drop-shadow(0 4px 3px rgb(0 0 0 / 0.1)),
  "xl":drop-shadow(0 20px 13px rgb(0 0 0 / 0.03)) drop-shadow(0 8px 5px rgb(0 0 0 / 0.08)),
  "2xl":drop-shadow(0 25px 25px rgb(0 0 0 / 0.15)),
  "none":drop-shadow(0 0 #0000),
);
$whiteSpaceLists: (
  "normal": normal,
  "nowrap": nowrap,
  "pre":pre,
  "pre-line":pre-line,
  "pre-wrap":pre-wrap,
);
$overFlowLists: (
  "auto": auto,
  "hidden": hidden,
  "clip": clip,
  "visible": visible,
  "scroll": scroll,
);
$userSelectLists: (
  "none": none,
  "text": text,
  "all": "all",
  "auto":auto,
);
@mixin breakpointsMixin($min-width) {
  @media screen and (min-width: $min-width) {
      @content
  }
};
@mixin position-zindex-position($position, $z-index, $left, $right, $top, $bottom) {
  position: $position;
  z-index: $z-index;
  left: $left;
  right: $right;
  top: $top;
  bottom: $bottom;
}
@mixin fullBd-r($radius) {
  border-radius: $radius;
}
@mixin height-width($height, $width) {
  height: $height;
  width: $width;
}
@mixin maxheight-width($height, $width) {
  max-height: $height;
  max-width: $width;
}
@each $name, $align in $verticalAlignLists {
  .vertical-align-#{$name} {
    vertical-align: $align;
  }
}
@each $name, $borderSize in $borderWidthLists {
  .bd-white-#{$name} {
    border: $borderSize solid white;
  }
  .bd-grey-#{$name} {
    border: $borderSize solid grey;
  }
  @each $breakpointsName,$width in $breakpoints {
    @include breakpointsMixin($width) {
      .#{$breakpointsName}-bd-white-#{$name} {
        border: $borderSize solid white;
      }
      .#{$breakpointsName}-bd-grey-#{$name} {
          border: $borderSize solid grey;
      }
     }
  }
}
@each $name, $scale in $scaleTransformLists {
  .scale-#{$name} {
    transform: $scale
  }
  @each $breakpointsName,$width in $breakpoints {
    @include breakpointsMixin($width) {
      .#{$breakpointsName}-scale-#{$name} {
        transform: $scale
      }
    }
  }
}
@each $name, $rotate in $rotateTransformLists {
  .rotate-#{$name} {
    transform: $rotate
  }
  @each $breakpointsName,$width in $breakpoints {
    @include breakpointsMixin($width) {
      .#{$breakpointsName}-rotate-#{$name} {
        transform: $rotate
      }
    }
  }
}
@each $name, $blur in $backdropBlurLists {
  .backdrop-blur-#{$name} {
    backdrop-filter: $blur;
  }
  .blur-#{$name} {
    filter: $blur;
  }
  @each $breakpointsName,$width in $breakpoints {
    @include breakpointsMixin($width) {
      .#{$breakpointsName}-backdrop-blur-#{$name} {
        backdrop-filter: $blur;
      }
      .#{$breakpointsName}-blur-#{$name} {
        filter: $blur;
      }
    }
  }
}
@each $name, $brightness in $backdropBrightnessLists {
  .backdrop-brightness-#{$name} {
    backdrop-filter: $brightness;
  }
  .brightness-#{$name} {
    filter: $brightness;
  }
  @each $breakpointsName,$width in $breakpoints {
    @include breakpointsMixin($width) {
      .#{$breakpointsName}-backdrop-brightness-#{$name} {
        backdrop-filter: $brightness;
      }
      .#{$breakpointsName}-brightness-#{$name} {
        filter: $brightness;
      }
    }
  }
}
@each $name, $color in $colorLists {
  //SVG
  .fill-#{$name} {                      // FILL FOR SVG
    fill: $color;
  }
  .fill-hover-#{$name} {
    fill: $color;
  }
  .stroke-#{$name} { 
    stroke: $color;
  }

  //NORMAL
  .accent-#{$name} {    //FORM COLOR
    accent-color: $color;
  }
  .caret-#{$name} {     //FORM COLOR
    caret-color: $color;
  }
  .bg-c-#{$name} {
    background-color: $color;
  }
  .bg-c-hover-#{$name}:hover {
    background-color: $color;
  }
  .bg-#{$name} {
    background: $color;
  }
  .bg-hover-#{$name}:hover {
    background: $color;
  }
  .color-#{$name} {
    color: $color;
  }
  .color-hover-#{$name}:hover {
    color: $color;
  }
  .t-decoration-color-#{$name} {
    text-decoration-color: $color;
  }
  .bd-color-#{$name} {
    border-color: $color;
  }
  @each $breakpointsName,$width in $breakpoints {
    @include breakpointsMixin($width) {
      .#{$breakpointsName}-fill-#{$name} {                      // FILL FOR SVG
        fill: $color;
      }
      .#{$breakpointsName}-fill-hover-#{$name} {
        fill: $color;
      }
      .#{$breakpointsName}-stroke-#{$name} { 
        stroke: $color;
      }
    
      //NORMAL
      .#{$breakpointsName}-accent-#{$name} {    //FORM COLOR
        accent-color: $color;
      }
      .#{$breakpointsName}-caret-#{$name} {     //FORM COLOR
        caret-color: $color;
      }
      .#{$breakpointsName}-bg-c-#{$name} {
        background-color: $color;
      }
      .#{$breakpointsName}-bg-c-hover-#{$name}:hover {
        background-color: $color;
      }
      .#{$breakpointsName}-bg-#{$name} {
        background: $color;
      }
      .#{$breakpointsName}-bg-hover-#{$name}:hover {
        background: $color;
      }
      .#{$breakpointsName}-color-#{$name} {
        color: $color;
      }
      .#{$breakpointsName}-color-hover-#{$name}:hover {
        color: $color;
      }
      .#{$breakpointsName}-t-decoration-color-#{$name} {
        text-decoration-color: $color;
      }
      .#{$breakpointsName}-bd-color-#{$name} {
        border-color: $color;
      }
    }
  }
}
@each $name, $shadow in $dropShadowLists {
  .drop-shadow-#{$name} {
    filter: $shadow;
  }
  @each $breakpointsName,$width in $breakpoints {
    @include breakpointsMixin($width) {
      .#{$breakpointsName}-drop-shadow-#{$name} {
        filter: $shadow;
      }
    }
  }
}
@each $name, $position in $textTransformLists {
  .t-transform-#{$name} {
    text-transform: $position;
  }
  @each $breakpointsName,$width in $breakpoints {
    @include breakpointsMixin($width) {
      .#{$breakpointsName}-t-transform-#{$name} {
        text-transform: $position;
      }
    }
  }
}
@each $name, $position in $textTransformLists {             //TRUNCATE
  .t-truncate-#{$name} {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  @each $breakpointsName,$width in $breakpoints {
    @include breakpointsMixin($width) {
      .#{$breakpointsName}-t-truncate-#{$name} {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
      }
    }
  }
}
@each $name, $whiteSpace in $whiteSpaceLists {
  .white-space-#{$name} {
    white-space: $whiteSpace;
  }
  @each $breakpointsName,$width in $breakpoints {
    @include breakpointsMixin($width) {
      .#{$breakpointsName}-white-space-#{$name} {
        white-space: $whiteSpace;
      }
    }
  }
}
@each $name, $position in $positionLists {
  .pos-#{$name} {
    position: $position;
  }
  @each $breakpointsName,$width in $breakpoints {
    @include breakpointsMixin($width) {
      .#{$breakpointsName}-pos-#{$name} {
        position: $position;
      }
    }
  }
}
@each $name, $borderWidth in $borderWidthLists {
  .bd-w-#{$name} {
    border-width: $borderWidth;
  }
  @each $breakpointsName,$width in $breakpoints {
    @include breakpointsMixin($width) {
      .#{$breakpointsName}-bd-w-#{$name} {
        border-width: $borderWidth;
      }
    }
  }
}
@each $name, $align in $alignLists {
  .ta-#{$name} {
    text-align: $align;
  }
  .float-#{$name} {
    float: $align;
  }
  @each $breakpointsName,$width in $breakpoints {
    @include breakpointsMixin($width) {
      .#{$breakpointsName}-ta-#{$name} {
        text-align: $align;
      }
      .#{$breakpointsName}-float-#{$name} {
        float: $align;
      }
    }
  }
}
@each $name, $weight in $fontWeightLists {
  .fw-#{$name} {
    font-weight: $weight;
  }
  @each $breakpointsName,$width in $breakpoints {
    @include breakpointsMixin($width) {
      .#{$breakpointsName}-fw-#{$name} {
        font-weight: $weight;
      }
    }
  }
}
@each $name, $size in $sizeLists {
  .fs-#{$name} {
    font-size: $size;
  }
  @each $breakpointsName,$width in $breakpoints {
    @include breakpointsMixin($width) {
      .#{$breakpointsName}-fs-#{$name} {
        font-size: $size;
      }
    }
  }
}

@each $name, $range in $rangeLists {
  .opacity-#{$name} {
    opacity: $range / 100;
  }
  .opacity-hover-#{$name}:hover {
    opacity: $range / 100;
  }
  .bd-r-#{$name} {
    border-radius: $range + px;
  }
  .bd-r-hover-#{$name}:hover {
    border-radius: $range + px;
  }
  .z-index-#{$name} {
    z-index: $range;
  }
  @each $breakpointsName,$width in $breakpoints {
    @include breakpointsMixin($width) {
      .#{$breakpointsName}-opacity-#{$name} {
        opacity: $range / 100;
      }
      .#{$breakpointsName}-opacity-hover-#{$name}:hover {
        opacity: $range / 100;
      }
      .#{$breakpointsName}-bd-r-#{$name} {
        border-radius: $range + px;
      }
      .#{$breakpointsName}-bd-r-hover-#{$name}:hover {
        border-radius: $range + px;
      }
      .#{$breakpointsName}-z-index-#{$name} {
        z-index: $range;
      }
    }
  }
}
@each $name, $range in $rangeListsTwo {
  .w-#{$name} {
    width: $range;
  }
  .h-#{$name} {
    height: $range;
  }
  .min-w-#{$name} {
    min-width: $range;
  }
  .max-w-#{$name} {
    max-width: $range;
  }
  .min-h-#{$name} {
    min-height: $range;
  }
  .max-h-#{$name} {
    max-height: $range;
  }
  @each $breakpointsName,$width in $breakpoints {
    @include breakpointsMixin($width) {
      .#{$breakpointsName}-w-#{$name} {
        width: $range;
      }
      .#{$breakpointsName}-h-#{$name} {
        height: $range;
      }
      .#{$breakpointsName}-min-w-#{$name} {
        min-width: $range;
      }
      .#{$breakpointsName}-max-w-#{$name} {
        max-width: $range;
      }
      .#{$breakpointsName}-min-h-#{$name} {
        min-height: $range;
      }
      .#{$breakpointsName}-max-h-#{$name} {
        max-height: $range;
      }
    }
  }
}
@each $name, $time in $timeScaleLists {
  .delay-hover-#{$name}:hover {
    transition-delay: $time;
  }
  .transition-hover-#{$name}:hover {
    transition: $time ;
  }
  @each $breakpointsName,$width in $breakpoints {
    @include breakpointsMixin($width) {
      .#{$breakpointsName}-delay-hover-#{$name}:hover {
        transition-delay: $time;
      }
      .#{$breakpointsName}-transition-hover-#{$name}:hover {
        transition: $time ;
      }
    }
  }
}
@each $name, $container in $containerScaleLists {
  .container-#{$name} {
    max-width: $container;
  }
  @each $breakpointsName,$width in $breakpoints {
    @include breakpointsMixin($width) {
      .#{$breakpointsName}-container-#{$name} {
        max-width: $container;
      }
    }
  }
}
@each $name, $column in $columnScaleLists {
  .col-#{$name} {
    float: left;
    columns: $column;
  }
  @each $breakpointsName,$width in $breakpoints {
    @include breakpointsMixin($width) {
      .#{$breakpointsName}-col-#{$name} {
        float: left;
        columns: $column;
      }
    }
  }
}
@each $name, $padding in $remLists {
  //PADDING
  .pd-#{$name} {
    padding: $padding;
  }
  .pd-l-#{$name} {
    padding-left: $padding;
  }
  .pd-r-#{$name} {
    padding-right: $padding;
  }
  .pd-t-#{$name} {
    padding-top: $padding;
  }
  .pd-b-#{$name} {
    padding-bottom: $padding;
  }
  .pd-horizontal-#{$name} {  //HORIZONTAL PADDING
    padding-left: $padding;
    padding-right: $padding;
  }
  .pd-vertical-#{$name} {  //VERTICAL PADDING
    padding-top: $padding;
    padding-bottom: $padding;
  }

  //MARGIN
  
  .mg-#{$name} {
    margin: $padding;
  }
  .mg-l-#{$name} {
    margin-left: $padding;
  }
  .mg-r-#{$name} {
    margin-right: $padding;
  }
  .mg-t-#{$name} {
    margin-top: $padding;
  }
  .mg-b-#{$name} {
    margin-bottom: $padding;
  }
  .mg-horizontal-#{$name} {  //HORIZONTAL MARGIN 
    margin-left: $padding;
    margin-right: $padding;
  }
  .mg-vertical-#{$name} {  //VERTICAL MARGIN 
    margin-top: $padding;
    margin-bottom: $padding;
  }

  //SPACE BETWEEN
  .space-top-#{$name} {
    margin-top: $padding;
  }
  .space-left-#{$name} {
    margin-left: $padding;
  }

  //OR
  .space-t-#{$name} {
    margin-top: $padding;
  }
  .space-l-#{$name} {
    margin-left: $padding;
  }

  // Text Indent
  .indent-#{$name} {
    text-indent: $padding;
  }
  .left-#{$name} {
    left: $padding
  }
  .right-#{$name} {
    right: $padding
  }
  .bottom-#{$name} {
    bottom: $padding
  }
  .top-#{$name} {
    top: $padding
  }
  @each $breakpointsName,$width in $breakpoints {
    @include breakpointsMixin($width) {
      .#{$breakpointsName}-pd-#{$name} {
        padding: $padding;
      }
      .#{$breakpointsName}-pd-l-#{$name} {
        padding-left: $padding;
      }
      .#{$breakpointsName}-pd-r-#{$name} {
        padding-right: $padding;
      }
      .#{$breakpointsName}-pd-t-#{$name} {
        padding-top: $padding;
      }
      .#{$breakpointsName}-pd-b-#{$name} {
        padding-bottom: $padding;
      }
      .#{$breakpointsName}-pd-horizontal-#{$name} {  //HORIZONTAL PADDING
        padding-left: $padding;
        padding-right: $padding;
      }
      .#{$breakpointsName}-pd-vertical-#{$name} {  //VERTICAL PADDING
        padding-top: $padding;
        padding-bottom: $padding;
      }
    
      //MARGIN
      
      .#{$breakpointsName}-mg-#{$name} {
        margin: $padding;
      }
      .#{$breakpointsName}-mg-l-#{$name} {
        margin-left: $padding;
      }
      .#{$breakpointsName}-mg-r-#{$name} {
        margin-right: $padding;
      }
      .#{$breakpointsName}-mg-t-#{$name} {
        margin-top: $padding;
      }
      .#{$breakpointsName}-mg-b-#{$name} {
        margin-bottom: $padding;
      }
      .#{$breakpointsName}-mg-horizontal-#{$name} {  //HORIZONTAL MARGIN 
        margin-left: $padding;
        margin-right: $padding;
      }
      .#{$breakpointsName}-mg-vertical-#{$name} {  //VERTICAL MARGIN 
        margin-top: $padding;
        margin-bottom: $padding;
      }
    
      //SPACE BETWEEN
      .#{$breakpointsName}-space-top-#{$name} {
        margin-top: $padding;
      }
      .#{$breakpointsName}-space-left-#{$name} {
        margin-left: $padding;
      }
    
      //OR
      .#{$breakpointsName}-space-t-#{$name} {
        margin-top: $padding;
      }
      .#{$breakpointsName}-space-l-#{$name} {
        margin-left: $padding;
      }
    
      // Text Indent
      .#{$breakpointsName}-indent-#{$name} {
        text-indent: $padding;
      }
      .#{$breakpointsName}-left-#{$name} {
        left: $padding
      }
      .#{$breakpointsName}-right-#{$name} {
        right: $padding
      }
      .#{$breakpointsName}-bottom-#{$name} {
        bottom: $padding
      }
      .#{$breakpointsName}-top-#{$name} {
        top: $padding
      }
    }
  }
}
@each $name, $select in $userSelectLists {
  .select-#{$select} {
    user-select: $select;
  }
  @each $breakpointsName,$width in $breakpoints {
    @include breakpointsMixin($width) {
      .#{$breakpointsName}-select-#{$select} {
        user-select: $select;
      }
    }
  }
}
@each $name, $text in $textDecorationLists {
  .t-decoration-#{$name} {
    text-decoration: $text;
  }
  @each $breakpointsName,$width in $breakpoints {
    @include breakpointsMixin($width) {
      .#{$breakpointsName}-t-decoration-#{$name} {
        text-decoration: $text;
      }
    }
  }
}
@each $name, $overflow in $overFlowLists {
  .overflow-#{$name} {
    overflow: $overflow;
  }
  .overflow-x-#{$name} {
    overflow-x: $overflow;
  }
  .overflow-y-#{$name} {
    overflow-y: $overflow;
  }
  @each $breakpointsName,$width in $breakpoints {
    @include breakpointsMixin($width) {
      .#{$breakpointsName}-overflow-#{$name} {
        overflow: $overflow;
      }
      .#{$breakpointsName}-overflow-x-#{$name} {
        overflow-x: $overflow;
      }
      .#{$breakpointsName}-overflow-y-#{$name} {
        overflow-y: $overflow;
      }
    }
  }
}
@each $name, $column in $columnRowLists {
  .grid {
    display: grid;
    grid-template-columns: auto auto auto;
  }
  .grid-col-#{$name} {
    grid-template-columns: repeat($column, minmax(0, 1fr));
  }
  .grid-col-none {
    grid-template-columns: none;
  }
  .grid-col-auto {
    grid-column: auto;
  }
  .grid-col-span-#{$name} {
    grid-column: span $column / span $column;
  }
  .grid-col-span-full {
    grid-column: 1 / -1;
  }
  .grid-col-end-#{$name} {
    grid-column-end: $column;
  }
  .grid-col-end-auto {
    grid-column-end: auto;
  }
  .grid-row-#{$name} {
    grid-template-rows: repeat($column, minmax(0, 1fr));
  }
  .grid-row-none {
    grid-template-rows: none;
  }
  .grid-row-auto {
    grid-row: auto;
  }
  .grid-row-span-#{$name} {
    grid-row: span $column / span $column;
  }
  .order-#{$name} {
    order: $column
  }
  .order-none {
    order: none;
  }
  .order-first {
    order: -9999;
  }
  .order-last {
    order: 9999;
  }
  @each $breakpointsName,$width in $breakpoints {
    @include breakpointsMixin($width) {
      .#{$breakpointsName}-grid-col-#{$name} {
        grid-template-columns: $column;
      }
      .#{$breakpointsName}-grid-col-none {
        grid-template-columns: none;
      }
      .#{$breakpointsName}-grid-col-auto {
        grid-column: auto;
      }
      .#{$breakpointsName}-grid-col-span-#{$name} {
        grid-column: span $column / span $column;
      }
      .#{$breakpointsName}-grid-col-span-full {
        grid-column: 1 / -1;
      }
      .#{$breakpointsName}-grid-col-end-#{$name} {
        grid-column-end: $column;
      }
      .#{$breakpointsName}-grid-col-end-auto {
        grid-column-end: auto;
      }
      .#{$breakpointsName}-grid-row-#{$name} {
        grid-template-rows: repeat($column, minmax(0, 1fr));
      }
      .#{$breakpointsName}-grid-row-none {
        grid-template-rows: none;
      }
      .#{$breakpointsName}-grid-row-auto {
        grid-row: auto;
      }
      .#{$breakpointsName}-grid-row-span-#{$name} {
        grid-row: span $column / span $column;
      }
      .#{$breakpointsName}-order-#{$name} {
        order: $column
      }
      .#{$breakpointsName}-order-none {
        order: none;
      }
      .#{$breakpointsName}-order-first {
        order: -9999;
      }
      .#{$breakpointsName}-order-last {
        order: 9999;
      }
      .#{$breakpointsName}-grid {
        display: grid;
        grid-template-columns: auto auto auto;
      }
    }
  }
}
.col {
  float:left;
  columns: 1;
}

.container {
  width:100%;
}

.primary-font {
  font-family: $primary-font;
}
.font-italic {
  font-style: italic;
}
.font-normal {
  font-style: normal;
}
.alerts {
  position: fixed;
  bottom:2rem;
  z-index: 1010;
  background-color: lightblue;
  padding: 1rem;
  width:90%;
  .a-bold {
    font-weight: bold;
  }
  .a-text {
    font-weight: normal;
  }
  .a-link {
    font-weight: bold;
    text-decoration: underline;
  }
}
.btn {
  border-radius: 5px;
  padding: .5rem;
  height:auto;
  display: inline-block;
  &:disabled,
  &.disabled,
  fieldset:disabled & {
    pointer-events: none;
    opacity: 0.3;
    @each $name, $color in $colorLists {
      .disabled-color-#{$name} {
        color:$color;
      }
      .disabled-bg-#{$name} {
        background-color:$color;
      }
    }
  }
}

.card {
  background-color: white;
  border-radius: 5px;
  max-width:740px;

  .c-image {
    height: 350px;
    width: 100%;
  }
  .c-body {
    padding: 1rem;
    width:100%;
    .c-title {
      font-size: 26px;
      line-height:5px;
    }
    .c-subTitle {
      font-size: 22px;
      color: grey;
      line-height:0px;
    }
    .c-text {
      font-size: 18px;
      line-height:0px;
    }
  }
  .c-footer {
    padding: 1rem;
    min-height: 0px;
    width:100%
  }
}
@each $breakpointsName,$width in $breakpoints {
  @include breakpointsMixin($width) {
    .#{$breakpointsName}-card {
      background-color: white;
      border-radius: 5px;
      max-width:740px;
    
      .c-image {
        height: 350px;
        width: 100%;
      }
      .c-image- {
        height: 350px;
        width: 100%;
      }
      .c-body {
        padding: 1rem;
        width:100%;
        .c-title {
          font-size: 26px;
          line-height:5px;
        }
        .c-subTitle {
          font-size: 22px;
          color: grey;
          line-height:0px;
        }
        .c-text {
          font-size: 18px;
          line-height:0px;
        }
      }
      .c-footer {
        padding: 1rem;
        min-height: 0px;
        width:100%
      }
    }
  }
}
.figure {
  height: auto;
  width: auto;
  .figure-caption {
    color:gray;
  }
}
.table-auto {
  table-layout: auto;
}
.table-fixed {
  table-layout: fixed;
}
.center-element {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
.w-full {
  width:100%;
}
.h-full {
  height:100%;
}
.w-h-full {
  height:100%;
  width:100%;
}

.s-w-h-full {
  width:100vw;
  height:100vh;
}
.s-w-full {
  width:100vh;
}
.s-h-full {
  height:100vh;
}
